{"version":3,"sources":["logo.svg","CONST.js","Toolbar.jsx","Main.jsx","DataReducer.jsx","Api.js","Cell.jsx","Realization.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["AppRoute","ROOT","REALIZATION","TECHTASK","TESTCASE","ReducerActionRouter","Request","GETWORDS","SAVEWORD","Toolbar","className","to","Main","DataContext","React","createContext","initialState","active","result","url","status","dataReducer","state","action","type","response","payload","Object","assign","data","a","fetch","json","address","method","headers","body","JSON","stringify","answer","console","log","Cell","props","words","cell","Realization","useContext","dispatch","useState","cells","setcells","info","setinfo","formRef","useRef","siteRef","unicwords","keys","length","useEffect","ref","htmlFor","id","name","required","onClick","evt","preventDefault","userRequest","current","value","getMeUniqueWordFromThisSite","then","recUser","map","key","index","App","useReducer","Provider","src","logo","alt","href","target","rel","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4b04d06.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const Active = {\r\n    REALIZATION: \"REALIZATION\",\r\n    TECHTASK : `TECHTASK`,\r\n    TESTCASE: `TESTCASE`,\r\n} \r\n\r\nconst AppRoute = {\r\n    ROOT: `/`,\r\n    REALIZATION: `/realization`,\r\n    TECHTASK : `/task`,\r\n    TESTCASE: `/case`,\r\n};\r\n\r\nconst ReducerActionRouter = {\r\n    GETUNICWORDS : `GETUNICWORDS`,\r\n    SAVEINDB: `SAVEINDB`, \r\n \r\n}\r\n\r\nconst Request = {\r\n    GETWORDS : '/api/get',\r\n    SAVEWORD: '/api/save', \r\n}\r\n\r\nexport {\r\n    ReducerActionRouter,\r\n    AppRoute,\r\n    Active,\r\n    Request\r\n};","import { AppRoute } from \"./CONST.js\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Toolbar( ) {\r\n\r\n    return (\r\n\r\n        <div className=\"toolbar\">\r\n\r\n            <Link className=\"toolbar-link\" to={AppRoute.REALIZATION}>\r\n                <h2>- Реализация </h2>\r\n            </Link> \r\n     \r\n \r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport Toolbar from \"./Toolbar.jsx\"\r\n\r\n\r\nfunction Main() {\r\n \r\n    return (\r\n        <div className=\"main\">\r\n            <Toolbar\r\n        \r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport {Active, ReducerActionRouter} from \"./CONST.js\"\r\n\r\nconst DataContext = React.createContext(\"words\");\r\nconst initialState = {\r\n    active: Active.REALIZATION,\r\n    result: [],\r\n    url: \"\",\r\n    status: \"\"\r\n};\r\n\r\n\r\nconst dataReducer = (state, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case ReducerActionRouter.GETUNICWORDS:\r\n            const response = action.payload;\r\n            const url = action.url;\r\n\r\n            return Object.assign({}, state, {\r\n                result: response,\r\n                url: url,\r\n                status: \"words\"\r\n            })\r\n\r\n        // Сохранили в ДБ и сбросили\r\n        case ReducerActionRouter.SAVEINDB:\r\n\r\n            return Object.assign({}, state, {\r\n                result: [],\r\n                status: \"\"\r\n            })\r\n    }\r\n}\r\n\r\nexport {\r\n    dataReducer,\r\n    initialState,\r\n    DataContext\r\n};","import {\r\n    Request\r\n} from \"./CONST.js\"\r\n\r\n//  TODO сделать Енумы на `/api/get` и другие\r\nasync function getMeUniqueWordFromThisSite(data) {\r\n    //  const url =  `${Request.GETWORDS}?url=${(new URLSearchParams(data)).toString()}`\r\n    const url = `${Request.GETWORDS}?url=${data}`\r\n\r\n    const response = await fetch(url);\r\n    return await response.json();\r\n}\r\n\r\nasync function recUser(data,url) {\r\n    const address= `${Request.SAVEWORD}?url=${url}`\r\n    const response = await fetch(address, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n const answer =   response;\r\n console.log(answer)\r\n    // return await response.json();\r\n    return true;\r\n\r\n}\r\n\r\n\r\n\r\nexport {\r\n    getMeUniqueWordFromThisSite,\r\n    recUser,\r\n}","\r\nfunction Cell(props) {\r\n    const {words,cell } = props;\r\n     return (\r\n        <li className=\"cell\">\r\n            <div className=\"cell_id\">{words} </div>\r\n            <div className=\"cell_name\">{cell} </div>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default Cell;","import React, {useContext, useEffect, useRef, useState} from 'react';\r\nimport {DataContext} from \"./DataReducer\"\r\n\r\nimport {getMeUniqueWordFromThisSite, recUser} from \"./Api.js\"\r\nimport Cell from \"./Cell.jsx\"\r\nimport './Realization.css';\r\nimport {ReducerActionRouter} from \"./CONST.js\"\r\n\r\nconst Realization = () => {\r\n    const {state, dispatch} = useContext(DataContext);\r\n\r\n    let [cells, setcells] = useState([]);\r\n    let [info, setinfo] = useState(\"Realization\");\r\n    let formRef = useRef(null);\r\n    let siteRef = useRef(null);\r\n\r\n    let unicwords = Object.keys(cells).length\r\n    useEffect(() => {\r\n        setcells(state.result)\r\n    }, [state.result]);\r\n\r\n    const sendUrlForParsing = (evt) => {\r\n        evt.preventDefault();\r\n        const userRequest = siteRef.current.value;\r\n        setinfo(userRequest)\r\n        getMeUniqueWordFromThisSite(userRequest).then(\r\n            (data) => {\r\n                dispatch({\r\n                    type: ReducerActionRouter.GETUNICWORDS,\r\n                    payload: data,\r\n                    url: userRequest\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    const saveWordInDB = (evt) => {\r\n        evt.preventDefault();\r\n        console.log(\"saveWordInDB \");\r\n        recUser(cells,state.url);\r\n        dispatch({\r\n            type: ReducerActionRouter.SAVEINDB,\r\n        });\r\n        setinfo(\"You can new request.\");\r\n    }\r\n    const _handleReset = () => {\r\n        formRef = null\r\n        setinfo(\"Realization\")\r\n        setcells({})\r\n    }\r\n\r\n    return (\r\n        <div className=\"realization\">\r\n            <form className=\"realization-form\" ref={formRef}>\r\n\r\n                <fieldset className=\"realization-form__element\">\r\n                    <label className=\"realization-form__label\" htmlFor=\"users\">Адрес сайта: </label>\r\n                    <input id=\"users\" name=\"users\" type=\"text\" required ref={siteRef}/>\r\n                </fieldset>\r\n\r\n                <fieldset className=\"realization-form__element realization-form__element--submit\">\r\n                    <button className=\"ad-form__submit\" type=\"submit\" onClick={sendUrlForParsing}>Отправить</button>\r\n                    или <button className=\"ad-form__reset\" type=\"reset\" onClick={_handleReset}>Очистить форму</button>\r\n                </fieldset>\r\n            </form>\r\n            {unicwords > 0 ?\r\n                <div>\r\n                    <p>Количество уникальных слов - {unicwords}</p>\r\n                    <button className=\"ad-form__clear\" type=\"submit\" onClick={saveWordInDB}>Сохранить в БД</button>\r\n                </div>\r\n                : \"\"}\r\n            <h1>{info}</h1>\r\n            <ul className=\"cell_list\">\r\n                {\r\n                    Object.keys(cells).map(\r\n                        (key, index) => {\r\n                            return (\r\n                                <Cell\r\n                                    words={key}\r\n                                    cell={cells[key]}\r\n                                    key={key}\r\n                                />\r\n                            );\r\n                        })\r\n                }\r\n            </ul>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Realization;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Main from \"./Main.jsx\"\r\nimport { AppRoute } from \"./CONST.js\"\r\nimport Realization from \"./Realization.jsx\"\r\n\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route\r\n} from \"react-router-dom\";\r\n import React, { useReducer } from 'react';\r\n\r\nimport { DataContext, initialState, dataReducer } from \"./DataReducer\"\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(dataReducer, initialState);\r\n\r\n  return (\r\n    <DataContext.Provider value={{ dispatch, state }}>\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"/\"\r\n        >\r\n          <h1>\r\n            Поиск и подсчет уникальных слов на сайте.\r\n          </h1>\r\n        </a>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://github.com/Egor18032019/SimbirSoftTestJavaAndReact\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Репозиторий\r\n        </a>\r\n      </header>\r\n      <main>\r\n        <BrowserRouter>\r\n          <Routes>\r\n            <Route path={AppRoute.ROOT} element={<Main />} />\r\n            <Route path={AppRoute.REALIZATION} element={<Realization />} />\r\n           </Routes>\r\n        </BrowserRouter>\r\n      </main>\r\n    </div >\r\n    </DataContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}